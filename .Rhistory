Predictee_mean_error = mean(Error, na.rm=TRUE)) %>%
ungroup()
# Add columns about respondent: mean error and mean absolute error
height_pred <- height_pred %>%
group_by(Respondent) %>%
mutate(Respondent_mean_error_abs = mean(Error_abs, na.rm=TRUE),
Respondent_mean_error = mean(Error, na.rm=TRUE)) %>%
ungroup()
# Add column about predicted height
height_pred <- height_pred %>%
group_by(Predictee) %>%
mutate(Predictee_mean_predheight = mean(Predicted_height, na.rm=TRUE)) %>%
ungroup()
# Count perfect predictions - i.e. within 0.5 cm of actual height
perfect_predictions <- height_pred %>%
group_by(Respondent) %>%
summarize(Perfect_Predictions = sum(Error_abs <= 0.5, na.rm = TRUE))
#### RESPONDENTS_MET PROCESS
# View structure
str(respondents_met)
# For the respondents_met dataset, gather it into three columns
met_gathered <- respondents_met %>%
gather(key = "Person_Met", value = "Have_Met", -Respondent)
met_gathered$Respondent <- factor(met_gathered$Respondent, levels = sort(unique(met_gathered$Respondent)))
# Find remaining discrepancies where one says TRUE and the other says FALSE
met_discrepancies <- met_gathered %>%
left_join(met_gathered, by = c("Respondent" = "Person_Met", "Person_Met" = "Respondent"), suffix = c(".1", ".2")) %>%
filter(Have_Met.1 != Have_Met.2) %>%
select(Respondent, Person_Met, Have_Met.1, Have_Met.2)
# Display the discrepancies
print(met_discrepancies)
# Add column for confirmed and unconfirmed meetings
# Confirmed = both have said they've met; unconfirmed = at least one has said they've met
# This is so that n_meetings includes meetings of people who haven't responded to the survey yet
met_corrected <- met_gathered %>%
left_join(met_gathered, by = c("Respondent" = "Person_Met", "Person_Met" = "Respondent"), suffix = c(".1", ".2")) %>%
mutate(Met_unconfirmed = ifelse((Have_Met.1 == TRUE) | (Have_Met.1 == TRUE), TRUE, FALSE)) %>%
mutate(Met_confirmed = ifelse((Have_Met.1 == TRUE) & (Have_Met.2 == TRUE), TRUE, FALSE)) %>%
select(c(Respondent, Person_Met, Met_unconfirmed, Met_confirmed)) %>%
rename(Predictee = Person_Met)
# Join with height_pred
height_pred <- height_pred %>%
left_join(met_corrected, by = c("Predictee", "Respondent"))
# Count how many people each respondent has met
count_met <- height_pred %>%
group_by(Respondent) %>%
summarize(Respondent_n_met = sum(Met_unconfirmed == TRUE, na.rm = TRUE),
Respondent_n_met_confirmed = sum(Met_confirmed == TRUE, na.rm = TRUE))
height_pred <- left_join(height_pred, count_met, by = "Respondent")
write_csv(height_pred, paste0(data_folder, "height_pred.csv"))
#########################
## CHARTS
#########################
# Plot 1: Actual heights - select first Respondent row so it just shows one bar for each
ggplot(data = height_pred %>% group_by(Respondent) %>% summarise(Respondent_height = first(Respondent_height)),
aes(x = reorder(Respondent, Respondent_height),
y = Respondent_height,
fill = Respondent,
label = Respondent_height)) +
geom_col(alpha = 0.5, color = "black") +
geom_text(nudge_y = 2, alpha = 1) +
coord_cartesian(ylim = c(120, 200)) +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size = 10), axis.title.x = element_blank()) +
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "What's your height?", subtitle = "Reported height (cm)")
ggsave(paste0(data_folder, "actual_heights_dist.png"),width=10,height=6)
# Plot 2: predicted heights vs actual heights for each predictee
# Create the violin plot
ggplot(height_pred, aes(x = reorder(Predictee, Predictee_mean_predheight),
y = Predicted_height),
fill = Predictee,
alpha = 0.5) +
geom_violin(aes(fill=Predictee, alpha=0.5)) +
geom_text(aes(y = Predictee_height), label = "X") + # This shows where people's actual height is
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=10), axis.title.x=element_blank()) +
guides(fill = FALSE, alpha = FALSE) +
labs(x = "Name", y = "", title = "What was your predicted height?", subtitle = "Predicted height (cm), ordered by mean predicted height. Reported height is shown as X.")
ggsave(paste0(data_folder, "predicted_height_violin.png"),width=10,height=6)
# Plot 3: geom_dist for predicted vs actual heights, only for people who completed the questionnaire
# Filter rows where Predictee is in the Respondent column
completers_height_pred <- height_pred %>%
filter(Predictee %in% Respondent)
# Gather the data into long format
completers_height_pred_long <- completers_height_pred %>%
select(Respondent, Respondent_height, Predictee, Predicted_height) %>%
pivot_longer(cols = c(Respondent_height, Predicted_height),
names_to = "Type",
values_to = "Height") %>%
mutate(Type = ifelse(Type == "Respondent_height", "Reported", "Predicted"))
ggplot(data=completers_height_pred_long, aes(x = Height, fill = Type)) +
geom_density(alpha = 0.5) +
theme_bw(base_size = 16) +
theme(axis.title.y=element_blank(), axis.text.y=element_blank()) +
labs(x = "Height (cm)", y = "", title = "How do predicted and reported heights compare?", subtitle = "Only shown for people who completed the questionnaire.")
ggsave(paste0(data_folder, "predicted_vs_actual_height_dist.png"),width=10,height=6)
# Plot 4: Who has met whom
ggplot(met_gathered, aes(x = Person_Met, y = Respondent, fill = Have_Met)) +
geom_tile(color = "white") +
theme_bw(base_size = 16) +
labs(title = "Who have you met?",
x = "Person they have met",
y = "Respondent",
fill = "Have met?") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "heatmap_meetings.png"),width=10,height=6)
# Plot 5: How many people has each person met
ggplot(count_met, aes(x = reorder(Respondent,Respondent_n_met), y = Respondent_n_met, fill = Respondent, alpha = 0.5, label = Respondent_n_met)) +
geom_bar(stat = "identity",  color = "black") +
geom_text(nudge_y = 0.6, alpha = 1, size=5) + # This shows where people's actual height is
labs(title = "How many of the others have you met?",
x = "Respondent",
y = "",
fill = "") +
guides(fill=FALSE, alpha=FALSE) +
theme_bw(base_size = 16)
ggsave(paste0(data_folder, "n_meetings_by_respondent.png"),width=10,height=6)
# Plot 6: Heatmap of errors and met_confirmed
ggplot(height_pred, aes(x = Predictee, y = Respondent, fill = Error)) +
geom_tile() +
geom_text(aes(label = ifelse(Met_confirmed, "", "*")), vjust = 0.5, color = "black", size = 5) +  # Add * if Met_confirmed is TRUE
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, na.value = "grey") +
scale_color_identity(na.translate = FALSE) +  # Direct use of color values and handle NA as no color
theme_bw(base_size = 16) +
labs(title = "How much error did you have in each prediction?",
x = "Predictee",
y = "Respondent",
subtitle = "People who haven't met are labeled with an asterisk",
fill = "Error (cm)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(paste0(data_folder, "heatmap_errors_and_meeting.png"),width=10,height=6)
# Plot 7: Respondent height vs Mean predicted height scatterplot
ggplot(height_pred, aes(x = Predictee_height, y = Predicted_height, fill = Predictee)) +
geom_violin(alpha = 0.3, color = NA, scale = "width") +
geom_jitter(aes(color=Predictee), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Predictee_mean_predheight, label = Predictee, color = Predictee), vjust = -1) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "grey") +
coord_cartesian(xlim = c(150, 190), ylim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Reported height (cm)", subtitle = "Predicted height (cm)", y = "", title = "How does your height compare to your predicted height?") +
guides(fill = "none", color = "none")
ggsave(paste0(data_folder, "scatter_actual_vs_predicted_height.png"),width=10,height=6)
# Plot 8: Distribution of errors vs number of people met
ggplot(height_pred, aes(x = Respondent_n_met_confirmed, y = Error, fill = Respondent)) +
geom_violin(alpha = 0.3, color = NA, scale = "width", position = position_dodge(width = 0.5)) +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Respondent_mean_error, label = Respondent, color = Respondent),
position = position_dodge(width = 0.5), vjust = -1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
#coord_cartesian(xlim = c(150, 190), ylim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Number of people met", subtitle = "Errors (cm)", y = "", title = "How do your errors compare to the number of people you've met?", caption = "Note: n only includes people who responded to the survey.") +
guides(fill = "none", color = "none") +
scale_x_continuous(breaks = seq(0, max(height_pred$Respondent_n_met_confirmed, na.rm = TRUE), by = 1))
ggsave(paste0(data_folder, "errors_vs_n_met.png"),width=10,height=6)
# Plot 9: Distribution of abs errors vs number of people met
ggplot(height_pred, aes(x = Respondent_n_met_confirmed, y = Error_abs, fill = Respondent)) +
geom_violin(alpha = 0.3, color = NA, scale = "width", position = position_dodge(width = 0.5)) +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Respondent_mean_error_abs, label = Respondent, color = Respondent),
position = position_dodge(width = 0.5), vjust = -1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
#coord_cartesian(xlim = c(150, 190), ylim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Number of people confirmed met", subtitle = "Absolute errors (cm)", y = "", title = "How do your absolute errors compare to the number of people you've met?", caption = "Note: n only includes people who responded to the survey.") +
guides(fill = "none", color = "none") +
scale_x_continuous(breaks = seq(0, max(height_pred$Respondent_n_met_confirmed, na.rm = TRUE), by = 1))
ggsave(paste0(data_folder, "errors_abs_vs_n_met.png"),width=10,height=6)
# Plot 10: Reported height vs. distribution of errors
ggplot(height_pred, aes(x = Respondent_height, y = Error, fill = Respondent)) +
geom_violin(alpha = 0.3, color = NA, scale = "width") +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Respondent_mean_error, label = Respondent, color = Respondent)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
coord_cartesian(xlim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Reported height (cm)", subtitle = "Errors (cm)", y = "", title = "How do your errors compare to your height?") +
guides(fill = "none", color = "none")
ggsave(paste0(data_folder, "errors_vs_height.png"),width=10,height=6)
# Plot 11: Reported height vs. distribution of abs errors
ggplot(height_pred, aes(x = Respondent_height, y = Error_abs, fill = Respondent)) +
geom_violin(alpha = 0.3, color = NA, scale = "width") +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Respondent_mean_error_abs, label = Respondent, color = Respondent)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
coord_cartesian(xlim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Reported height (cm)", subtitle = "Errors (cm)", y = "", title = "How do your absolute errors compare to your height?") +
guides(fill = "none", color = "none")
ggsave(paste0(data_folder, "errors_abs_vs_height.png"),width=10,height=6)
# Plot 12: Errors ranked
ggplot(data = height_pred, aes(x=reorder(Respondent, Respondent_mean_error),
y=Error,
fill=Respondent,
alpha=0.5,
label=Respondent)) +
geom_violin() +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=10), axis.title.x=element_blank()) +
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "How were your errors distributed?", subtitle = "Errors (cm)")
ggsave(paste0(data_folder, "errors_ranked.png"),width=10,height=6)
# Plot 13: Absolute errors ranked
ggplot(data = height_pred, aes(x=reorder(Respondent, Respondent_mean_error_abs),
y=Error_abs,
fill=Respondent,
alpha=0.5,
label=Respondent)) +
geom_violin() +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=10), axis.title.x=element_blank()) +
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "How were your absolute errors distributed?", subtitle = "Absolute errors (cm)")
ggsave(paste0(data_folder, "errors_abs_ranked.png"),width=10,height=6)
# Plot 14: Errors by respondent and met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)),
aes(x=Met_confirmed,
y=Error,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin() +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
geom_text(data = filter(height_pred, Met_confirmed == TRUE), aes(label = paste0("n=", Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_text(data = filter(height_pred, Met_confirmed == FALSE), aes(label = paste0("n=", n_distinct(height_pred$Respondent) - Respondent_n_met_confirmed), y=20), color = "#847B8E") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank(), legend.position="right") +
guides(alpha = "none", colour = "none") +
labs(x = "", y = "", fill = "", title = "Prediction errors of people met vs unmet", subtitle = "Error (cm)", caption = "Note: n only includes people who responded to the survey.") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "faceted_errors_respondent_met.png"),width=10,height=6)
# Plot 15: Absolute errors by respondent and met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)),
aes(x=Met_confirmed,
y=Error_abs,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin() +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_text(data = filter(height_pred, Met_confirmed == TRUE), aes(label = paste0("n=", Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_text(data = filter(height_pred, Met_confirmed == FALSE), aes(label = paste0("n=", n_distinct(height_pred$Respondent) - Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank(), legend.position="right") +
guides(alpha = "none", colour = "none") +
labs(x = "", y = "", fill = "", title = "Absolute prediction errors of people met vs unmet", subtitle = "Absolute error (cm)", caption = "Note: n only includes people who responded to the survey.") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "faceted_errors_abs_respondent_met.png"),width=10,height=6)
# Plot 16: Errors by group of people met vs havent met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)), aes(x=Met_confirmed,
y=Error,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin() +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=12), # Set size of x-axis labels
axis.ticks.x = element_blank(),
axis.title.x = element_blank()) +  # Remove legend
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "Overall: errors of people met vs unmet", subtitle = "Error (cm)") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D")) +
scale_x_discrete(labels = c("TRUE" = "Met", "FALSE" = "Unmet"))  # Set x-axis labels
ggsave(paste0(data_folder, "group_errors_met_unmet.png"),width=10,height=6)
# Plot 17: Absolute errors by group of people met vs havent met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)), aes(x=Met_confirmed,
y=Error_abs,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin() +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=12), # Set size of x-axis labels
axis.ticks.x = element_blank(),
axis.title.x = element_blank()) +  # Remove legend
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "Overall: absolute errors of people met vs unmet", subtitle = "Absolute error (cm)") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D")) +
scale_x_discrete(labels = c("TRUE" = "Met", "FALSE" = "Unmet"))  # Set x-axis labels
ggsave(paste0(data_folder, "group_errors_abs_met_unmet.png"),width=10,height=6)
# Plot 18: Facet grid: everyones predictions vs respondents heights
ggplot(height_pred, aes(x = Predictee_height, y = Predicted_height)) +
geom_point(aes(color = Predictee), alpha = 0.5) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_text_repel(aes(label = Predictee, color = Predictee)) +
geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "grey") +
coord_cartesian(xlim = c(150, 200), ylim = c(150, 200)) +
theme_bw(base_size = 16) +
labs(x = "Reported height (cm)", y = "Predicted height (cm)", title = "") +
guides(fill = "none", color = "none")
ggsave(paste0(data_folder, "facet_respondent_predictions_vs_actual.png"),width=10,height=6)
# Plot 19: Perfect predictions
ggplot(data = perfect_predictions,
aes(x = reorder(Respondent, Perfect_Predictions),
y = Perfect_Predictions,
fill = Respondent,
label = Perfect_Predictions)) +
geom_col(alpha = 0.5, color = "black") +
geom_text(nudge_y = 0.1, alpha = 1) +
coord_cartesian() +
theme_bw(base_size = 16) +
scale_y_continuous(breaks = seq(0, max(perfect_predictions$Perfect_Predictions, na.rm = TRUE), by = 1)) +
theme(axis.text.x = element_text(size = 10), axis.title.x = element_blank()) +
guides(fill = "none", alpha = "none") +
labs(x = "", y = "", title = "How many perfect predictions did you make?", subtitle = "Perfect predictions are defined as absolute errors ≤ 0.5 cm.")
ggsave(paste0(data_folder, "n_perfect_predictions.png"),width=10,height=6)
ggplot(height_pred, aes(x = Respondent_n_met_confirmed, y = Error, fill = Respondent)) +
geom_violin(alpha = 0.3, color = NA, scale = "width", position = position_dodge(width = 0.5)) +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Respondent_mean_error, label = Respondent, color = Respondent),
position = position_dodge(width = 0.5), vjust = -1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
#coord_cartesian(xlim = c(150, 190), ylim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Number of people met", subtitle = "Errors (cm)", y = "", title = "How do your errors compare to the number of people you've met?", caption = "Note: n only includes people who responded to the survey.") +
guides(fill = "none", color = "none") +
scale_x_continuous(breaks = seq(0, max(height_pred$Respondent_n_met_confirmed, na.rm = TRUE), by = 1))
ggsave(paste0(data_folder, "errors_vs_n_met.png"),width=10,height=6)
# Plot 14: Errors by respondent and met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)),
aes(x=Met_confirmed,
y=Error,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin() +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
geom_text(data = filter(height_pred, Met_confirmed == TRUE), aes(label = paste0("n=", Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_text(data = filter(height_pred, Met_confirmed == FALSE), aes(label = paste0("n=", n_distinct(height_pred$Respondent) - Respondent_n_met_confirmed - 1), y=20), color = "#847B8E") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank(), legend.position="right") +
guides(alpha = "none", colour = "none") +
labs(x = "", y = "", fill = "", title = "Prediction errors of people met vs unmet", subtitle = "Error (cm)", caption = "Note: n only includes people who responded to the survey.") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "faceted_errors_respondent_met.png"),width=10,height=6)
# Plot 15: Absolute errors by respondent and met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)),
aes(x=Met_confirmed,
y=Error_abs,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin() +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_text(data = filter(height_pred, Met_confirmed == TRUE), aes(label = paste0("n=", Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_text(data = filter(height_pred, Met_confirmed == FALSE), aes(label = paste0("n=", n_distinct(height_pred$Respondent) - Respondent_n_met_confirmed - 1), y=20), color = "#847B8E") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank(), legend.position="right") +
guides(alpha = "none", colour = "none") +
labs(x = "", y = "", fill = "", title = "Absolute prediction errors of people met vs unmet", subtitle = "Absolute error (cm)", caption = "Note: n only includes people who responded to the survey.") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "faceted_errors_abs_respondent_met.png"),width=10,height=6)
ggplot(data = filter(height_pred, !is.na(Met_confirmed)),
aes(x=Met_confirmed,
y=Error,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin(scale="width") +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
geom_text(data = filter(height_pred, Met_confirmed == TRUE), aes(label = paste0("n=", Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_text(data = filter(height_pred, Met_confirmed == FALSE), aes(label = paste0("n=", n_distinct(height_pred$Respondent) - Respondent_n_met_confirmed - 1), y=20), color = "#847B8E") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank(), legend.position="right") +
guides(alpha = "none", colour = "none") +
labs(x = "", y = "", fill = "", title = "Prediction errors of people met vs unmet", subtitle = "Error (cm)", caption = "Note: n only includes people who responded to the survey.") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "faceted_errors_respondent_met.png"),width=10,height=6)
ggplot(data = filter(height_pred, !is.na(Met_confirmed)),
aes(x=Met_confirmed,
y=Error,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin(scale="count") +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
geom_text(data = filter(height_pred, Met_confirmed == TRUE), aes(label = paste0("n=", Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_text(data = filter(height_pred, Met_confirmed == FALSE), aes(label = paste0("n=", n_distinct(height_pred$Respondent) - Respondent_n_met_confirmed - 1), y=20), color = "#847B8E") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank(), legend.position="right") +
guides(alpha = "none", colour = "none") +
labs(x = "", y = "", fill = "", title = "Prediction errors of people met vs unmet", subtitle = "Error (cm)", caption = "Note: n only includes people who responded to the survey.") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "faceted_errors_respondent_met.png"),width=10,height=6)
# Plot 15: Absolute errors by respondent and met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)),
aes(x=Met_confirmed,
y=Error_abs,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin(scale = "count") +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
facet_wrap(vars(Respondent),
labeller = labeller(Respondent = function(x) paste(x, "'s predictions", sep=""))) +
geom_text(data = filter(height_pred, Met_confirmed == TRUE), aes(label = paste0("n=", Respondent_n_met_confirmed), y=20), color = "#847B8E") +
geom_text(data = filter(height_pred, Met_confirmed == FALSE), aes(label = paste0("n=", n_distinct(height_pred$Respondent) - Respondent_n_met_confirmed - 1), y=20), color = "#847B8E") +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank(), legend.position="right") +
guides(alpha = "none", colour = "none") +
labs(x = "", y = "", fill = "", title = "Absolute prediction errors of people met vs unmet", subtitle = "Absolute error (cm)", caption = "Note: n only includes people who responded to the survey.") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D"), labels=c("TRUE"="Met", "FALSE"="Unmet"))
ggsave(paste0(data_folder, "faceted_errors_abs_respondent_met.png"),width=10,height=6)
# Plot 9: Distribution of abs errors vs number of people met
ggplot(height_pred, aes(x = Respondent_n_met_confirmed, y = Error_abs, fill = Respondent)) +
geom_violin(alpha = 0.3, color = NA, scale = "width", position = position_dodge(width = 0.5)) +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Respondent_mean_error_abs, label = Respondent, color = Respondent),
position = position_dodge(width = 0.5), vjust = -1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
#coord_cartesian(xlim = c(150, 190), ylim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Number of people confirmed met", subtitle = "Absolute errors (cm)", y = "", title = "How do your absolute errors compare to the number of people you've met?", caption = "Note: n only includes people who responded to the survey.") +
guides(fill = "none", color = "none") +
scale_x_continuous(breaks = seq(0, max(height_pred$Respondent_n_met_confirmed, na.rm = TRUE), by = 1))
ggsave(paste0(data_folder, "errors_abs_vs_n_met.png"),width=10,height=6)
# Plot 8: Distribution of errors vs number of people met
ggplot(height_pred, aes(x = Respondent_n_met_confirmed, y = Error, fill = Respondent)) +
geom_violin(alpha = 0.3, color = NA, scale = "width", position = position_dodge(width = 0.5)) +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_text(aes(y = Respondent_mean_error, label = Respondent, color = Respondent),
position = position_dodge(width = 0.5), vjust = -1) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
#coord_cartesian(xlim = c(150, 190), ylim = c(150, 190)) +
theme_bw(base_size = 16) +
labs(x = "Number of people met", subtitle = "Errors (cm)", y = "", title = "How do your errors compare to the number of people you've met?", caption = "Note: n only includes people who responded to the survey.") +
guides(fill = "none", color = "none") +
scale_x_continuous(breaks = seq(0, max(height_pred$Respondent_n_met_confirmed, na.rm = TRUE), by = 1))
ggsave(paste0(data_folder, "errors_vs_n_met.png"),width=10,height=6)
# Plot 16: Errors by group of people met vs havent met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)), aes(x=Met_confirmed,
y=Error,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin(scale="count") +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=12), # Set size of x-axis labels
axis.ticks.x = element_blank(),
axis.title.x = element_blank()) +  # Remove legend
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "Overall: errors of people met vs unmet", subtitle = "Error (cm)") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D")) +
scale_x_discrete(labels = c("TRUE" = "Met", "FALSE" = "Unmet"))  # Set x-axis labels
ggsave(paste0(data_folder, "group_errors_met_unmet.png"),width=10,height=6)
# Plot 17: Absolute errors by group of people met vs havent met
ggplot(data = filter(height_pred, !is.na(Met_confirmed)), aes(x=Met_confirmed,
y=Error_abs,
fill=Met_confirmed,
alpha=0.5)) +
geom_violin(scale="count") +
geom_jitter(aes(color=Met_confirmed), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=12), # Set size of x-axis labels
axis.ticks.x = element_blank(),
axis.title.x = element_blank()) +  # Remove legend
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "Overall: absolute errors of people met vs unmet", subtitle = "Absolute error (cm)") +
scale_fill_manual(values=c("TRUE"="#00BFC4", "FALSE"="#F8766D")) +
scale_x_discrete(labels = c("TRUE" = "Met", "FALSE" = "Unmet"))  # Set x-axis labels
ggsave(paste0(data_folder, "group_errors_abs_met_unmet.png"),width=10,height=6)
# Plot 12: Errors ranked
ggplot(data = height_pred, aes(x=reorder(Respondent, Respondent_mean_error),
y=Error,
fill=Respondent,
alpha=0.5,
label=Respondent)) +
geom_violin() +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=10), axis.title.x=element_blank()) +
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "How were your errors distributed?", subtitle = "Errors (cm), ordered by mean error")
ggsave(paste0(data_folder, "errors_ranked.png"),width=10,height=6)
# Plot 13: Absolute errors ranked
ggplot(data = height_pred, aes(x=reorder(Respondent, Respondent_mean_error_abs),
y=Error_abs,
fill=Respondent,
alpha=0.5,
label=Respondent)) +
geom_violin() +
geom_jitter(aes(color=Respondent), width = 0.2, alpha = 0.3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "grey") +
theme_bw(base_size = 16) +
theme(axis.text.x = element_text(size=10), axis.title.x=element_blank()) +
guides(fill = "none", alpha = "none", colour = "none") +
labs(x = "", y = "", title = "How were your absolute errors distributed?", subtitle = "Absolute errors (cm), ordered by mean absolute error")
ggsave(paste0(data_folder, "errors_abs_ranked.png"),width=10,height=6)
